"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = localRequire;
exports.localResolve = localResolve;

var _installPackage = _interopRequireDefault(require("./installPackage"));

var _path = require("path");

var _resolve = _interopRequireDefault(require("./resolve"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const cache = new Map();

async function localRequire(name, path, triedInstall = false // $FlowFixMe this must be dynamic
) {
  let [resolved] = await localResolve(name, path, triedInstall); // $FlowFixMe this must be dynamic

  return require(resolved);
}

async function localResolve(name, path, triedInstall = false) {
  let basedir = (0, _path.dirname)(path);
  let key = basedir + ':' + name;
  let resolved = cache.get(key);

  if (!resolved) {
    try {
      resolved = await (0, _resolve.default)(name, {
        basedir,
        extensions: ['.js', '.json']
      });
    } catch (e) {
      if (e.code === 'MODULE_NOT_FOUND' && !triedInstall) {
        await (0, _installPackage.default)([name], path);
        return localResolve(name, path, true);
      }

      throw e;
    }

    cache.set(key, resolved);
  }

  return resolved;
}